var N = null;var searchIndex = {};
searchIndex["calloop"]={"doc":"Calloop, a Callback-based Event Loop","items":[[3,"EventLoop","calloop","An event loop",N,N],[3,"InsertError","","An error generated when trying to insert an event source",N,N],[12,"source","","The source that could not be inserted",0,N],[12,"error","","The generated error",0,N],[3,"LoopHandle","","An handle to an event loop",N,N],[3,"LoopSignal","","A signal that can be shared between thread to stop or wakeup a running event loop",N,N],[3,"Source","","An event source that has been inserted into the event loop",N,N],[3,"Idle","","An idle callback that was inserted in this loop",N,N],[0,"channel","","An MPSC channel whose receiving end is an event source",N,N],[4,"SendError","calloop::channel","An error returned from the `Sender::send` or `SyncSender::send` function.",N,N],[13,"Io","","An IO error.",1,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",1,N],[3,"Sender","","The sending half of a channel.",N,N],[3,"SyncSender","","The sending half of a synchronous channel.",N,N],[4,"TrySendError","","An error returned from the `SyncSender::try_send` function.",N,N],[13,"Io","","An IO error.",2,N],[13,"Full","","Data could not be sent because it would require the callee to block.",2,N],[13,"Disconnected","","The receiving half of the channel has disconnected.",2,N],[3,"Channel","","The receiving end of the channel",N,N],[4,"Event","","The events generated by the channel event source",N,N],[13,"Msg","","A message was received and is bundled here",3,N],[13,"Closed","","The channel was closed",3,N],[5,"channel","","Create a new asynchronous channel",N,N],[5,"sync_channel","","Create a new synchronous, bounded channel",N,N],[0,"generic","calloop","A generic event source wrapping an `Evented` type",N,N],[3,"Generic","calloop::generic","A generic event source wrapping an `Evented` type",N,N],[3,"Event","","An event generated by the `Generic` source",N,N],[12,"source","","An access to the source that generated this event",4,N],[12,"readiness","","The associated rediness",4,N],[3,"EventedFd","","An owning wrapper implementing Evented for any file descriptor based type in Unix",N,N],[12,"0","","",5,N],[3,"EventedRawFd","","A wrapper implementing Evented for any raw file descriptor.",N,N],[12,"0","","",6,N],[0,"signals","calloop","Event source for tracking Unix signals",N,N],[4,"Signal","calloop::signals","",N,N],[13,"SIGHUP","","",7,N],[13,"SIGINT","","",7,N],[13,"SIGQUIT","","",7,N],[13,"SIGILL","","",7,N],[13,"SIGTRAP","","",7,N],[13,"SIGABRT","","",7,N],[13,"SIGBUS","","",7,N],[13,"SIGFPE","","",7,N],[13,"SIGKILL","","",7,N],[13,"SIGUSR1","","",7,N],[13,"SIGSEGV","","",7,N],[13,"SIGUSR2","","",7,N],[13,"SIGPIPE","","",7,N],[13,"SIGALRM","","",7,N],[13,"SIGTERM","","",7,N],[13,"SIGSTKFLT","","",7,N],[13,"SIGCHLD","","",7,N],[13,"SIGCONT","","",7,N],[13,"SIGSTOP","","",7,N],[13,"SIGTSTP","","",7,N],[13,"SIGTTIN","","",7,N],[13,"SIGTTOU","","",7,N],[13,"SIGURG","","",7,N],[13,"SIGXCPU","","",7,N],[13,"SIGXFSZ","","",7,N],[13,"SIGVTALRM","","",7,N],[13,"SIGPROF","","",7,N],[13,"SIGWINCH","","",7,N],[13,"SIGIO","","",7,N],[13,"SIGPWR","","",7,N],[13,"SIGSYS","","",7,N],[3,"siginfo","","",N,N],[12,"ssi_signo","","",8,N],[12,"ssi_errno","","",8,N],[12,"ssi_code","","",8,N],[12,"ssi_pid","","",8,N],[12,"ssi_uid","","",8,N],[12,"ssi_fd","","",8,N],[12,"ssi_tid","","",8,N],[12,"ssi_band","","",8,N],[12,"ssi_overrun","","",8,N],[12,"ssi_trapno","","",8,N],[12,"ssi_status","","",8,N],[12,"ssi_int","","",8,N],[12,"ssi_ptr","","",8,N],[12,"ssi_utime","","",8,N],[12,"ssi_stime","","",8,N],[12,"ssi_addr","","",8,N],[12,"ssi_addr_lsb","","",8,N],[12,"ssi_syscall","","",8,N],[12,"ssi_call_addr","","",8,N],[12,"ssi_arch","","",8,N],[3,"Event","","An event generated by the signal event source",N,N],[3,"Signals","","An event source for receiving Unix signals",N,N],[0,"timer","calloop","Timer-based event sources",N,N],[3,"Timeout","calloop::timer","A timeout, as returned by `Timer::set_timeout`.",N,N],[3,"Timer","","A Timer event source",N,N],[3,"TimerHandle","","An handle to a timer, used to set or cancel timeouts",N,N],[11,"insert_source","calloop","Insert an new event source in the loop",9,[[["self"],["e"],["f"]],["result",["source","inserterror"]]]],[11,"insert_idle","","Insert an idle callback",9,[[["self"],["f"]],["idle"]]],[11,"new","","Create a new event loop",10,[[],["result",["eventloop"]]]],[11,"handle","","Retrieve a loop handle",10,[[["self"]],["loophandle"]]],[11,"dispatch","","Dispatch pending events to their callbacks",10,[[["self"],["option",["duration"]],["data"]],["result"]]],[11,"get_signal","","Get a signal to stop this event loop from running",10,[[["self"]],["loopsignal"]]],[11,"run","","Run this event loop",10,[[["self"],["option",["duration"]],["data"],["f"]],["result"]]],[11,"stop","","Stop the event loop",11,[[["self"]]]],[11,"wakeup","","Wake up the event loop",11,[[["self"]]]],[11,"new","calloop::generic","Wrap an `Evented` type into a `Generic` event source",12,[[["e"]],["generic"]]],[11,"from_rc","","Wrap an `Evented` type from an `Rc` into a `Generic` event source",12,[[["rc",["refcell"]]],["generic"]]],[11,"set_interest","","Change the interest for this evented source",12,[[["self"],["ready"]]]],[11,"set_pollopts","","Change the poll options for this evented source",12,[[["self"],["pollopt"]]]],[11,"clone_inner","","Get a clone of the inner `Rc` wrapping your event source",12,[[["self"]],["rc",["refcell"]]]],[11,"unwrap","","Unwrap the `Generic` source to retrieve the underlying `Evented`.",12,[[["self"]],["rc",["refcell"]]]],[11,"from_fd_source","","Wrap a file descriptor based source into a `Generic` event source.",12,[[["fd"]],["generic",["eventedfd"]]]],[11,"from_raw_fd","","Wrap a raw file descriptor into a `Generic` event source.",12,[[["rawfd"]],["generic",["eventedrawfd"]]]],[11,"signal","calloop::signals","Retrieve the signal number that was receive",13,[[["self"]],["signal"]]],[11,"full_info","","Access the full `siginfo_t` associated with this signal event",13,[[["self"]],["siginfo"]]],[11,"new","","Create a new signal event source listening on the specified list of signals",14,N],[11,"add_signals","","Add a list of signals to the signals source",14,N],[11,"remove_signals","","Remove a list of signals to the signals source",14,N],[11,"set_signals","","Replace the list of signals of the source",14,N],[11,"new","calloop::timer","Create a new timer with default parameters",15,[[],["timer"]]],[11,"with_resolution","","Create a new timer with a specific time resolution",15,[[["duration"]],["timer"]]],[11,"handle","","Get an handle for this timer",15,[[["self"]],["timerhandle"]]],[11,"add_timeout","","Set a new timeout",16,[[["self"],["duration"],["t"]],["timeout"]]],[11,"cancel_timeout","","Cancel a previsouly set timeout and retrieve the associated data",16,[[["self"],["timeout"]],["option"]]],[11,"reregister","calloop","Refresh the registration of this event source to the loop",17,[[["self"]],["result"]]],[11,"remove","","Remove this source from the event loop",17,[[["self"]],["e"]]],[11,"cancel","","Cancel the idle callback if it was not already run",18,[[["self"]]]],[8,"EventSource","","Trait representing a source that can be inserted into an EventLoop",N,N],[16,"Event","","The type of events generated by your sources",19,N],[10,"interest","","The interest value that will be given to `mio` when registering your source",19,[[["self"]],["ready"]]],[10,"pollopts","","The pollopt value that will be given to `mio` when registering your source",19,[[["self"]],["pollopt"]]],[10,"make_dispatcher","","Wrap an user callback into a dispatcher, that will convert an `mio` readiness into an event",19,[[["self"],["f"]],["rc",["refcell"]]]],[8,"EventDispatcher","","An event dispatcher",N,N],[10,"ready","","The source has a readiness event",20,[[["self"],["ready"],["data"]]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","calloop::channel","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","calloop::generic","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","calloop::signals","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","calloop::timer","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"clone","calloop::signals","",8,[[["self"]],["signalfd_siginfo"]]],[11,"from","calloop::channel","",2,[[["error"]],["trysenderror"]]],[11,"from","","",2,[[["trysenderror"]],["trysenderror"]]],[11,"from","","",1,[[["error"]],["senderror"]]],[11,"from","","",2,[[["senderror"]],["trysenderror"]]],[11,"from","","",1,[[["senderror"]],["senderror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","calloop::timer","",24,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","calloop::channel","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","calloop::timer","",24,[[["self"]],["timeout"]]],[11,"clone","calloop::channel","",22,[[["self"]],["syncsender"]]],[11,"clone","","",21,[[["self"]],["sender"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"eq","calloop::signals","",7,[[["self"],["signal"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",7,[[["self"]],["signal"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","","",7,N],[11,"as_ref","","",7,[[["self"]],["str"]]],[11,"from_str","","",7,[[["str"]],["result",["signal","error"]]]],[11,"cmp","","",7,[[["self"],["signal"]],["ordering"]]],[11,"partial_cmp","","",7,[[["self"],["signal"]],["option",["ordering"]]]],[11,"interest","calloop::channel","",23,[[["self"]],["ready"]]],[11,"pollopts","","",23,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",23,[[["self"],["f"]],["rc",["refcell"]]]],[11,"interest","calloop::generic","",12,[[["self"]],["ready"]]],[11,"pollopts","","",12,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",12,[[["self"],["f"]],["rc",["refcell"]]]],[11,"interest","calloop::signals","",14,[[["self"]],["ready"]]],[11,"pollopts","","",14,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",14,[[["self"],["f"]],["rc",["refcell"]]]],[11,"interest","calloop::timer","",15,[[["self"]],["ready"]]],[11,"pollopts","","",15,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",15,[[["self"],["f"]],["rc",["refcell"]]]],[11,"clone","calloop","",9,[[["self"]],["loophandle"]]],[11,"clone","","",11,[[["self"]],["loopsignal"]]],[11,"clone","calloop::signals","",13,[[["self"]],["event"]]],[11,"clone","calloop::timer","",16,[[["self"]],["timerhandle"]]],[11,"drop","calloop::signals","",14,[[["self"]]]],[11,"fmt","calloop","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",17,[[["self"]],["e"]]],[11,"deref_mut","","",17,[[["self"]],["e"]]],[11,"register","calloop::channel","",23,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",23,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",23,[[["self"],["poll"]],["result"]]],[11,"register","calloop::generic","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",5,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",5,[[["self"],["poll"]],["result"]]],[11,"register","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]],[11,"register","","",12,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",12,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",12,[[["self"],["poll"]],["result"]]],[11,"register","calloop::signals","",14,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",14,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",14,[[["self"],["poll"]],["result"]]],[11,"register","calloop::timer","",15,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",15,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",15,[[["self"],["poll"]],["result"]]],[11,"send","calloop::channel","Attempts to send a value on this channel, returning it back if it could not be sent.",21,[[["self"],["t"]],["result",["senderror"]]]],[11,"send","","Sends a value on this synchronous channel.",22,[[["self"],["t"]],["result",["senderror"]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",22,[[["self"],["t"]],["result",["trysenderror"]]]],[11,"iterator","calloop::signals","",7,[[],["signaliterator"]]],[11,"from_c_int","","",7,[[["i32"]],["result",["signal","error"]]]]],"paths":[[3,"InsertError"],[4,"SendError"],[4,"TrySendError"],[4,"Event"],[3,"Event"],[3,"EventedFd"],[3,"EventedRawFd"],[4,"Signal"],[3,"siginfo"],[3,"LoopHandle"],[3,"EventLoop"],[3,"LoopSignal"],[3,"Generic"],[3,"Event"],[3,"Signals"],[3,"Timer"],[3,"TimerHandle"],[3,"Source"],[3,"Idle"],[8,"EventSource"],[8,"EventDispatcher"],[3,"Sender"],[3,"SyncSender"],[3,"Channel"],[3,"Timeout"]]};
initSearch(searchIndex);
